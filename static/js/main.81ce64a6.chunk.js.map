{"version":3,"sources":["utils/percentUtils.js","components/ProgressBar/ProgressBar.js","components/ProgressBar/index.js","components/TextInput/TextInput.js","components/TextInput/index.js","components/Label/Label.js","components/Label/index.js","components/TextInputBEM/TextInputBEM.js","components/TextInputBEM/index.js","components/EyeIcon/EyeIcon.js","components/EyeIcon/index.js","components/PasswordInput/PasswordInput.js","components/PasswordInput/index.js","../config/componentData.js","docs/examples/EyeIcon/Example.js","docs/examples/Label/ExampleOptional.js","docs/examples/Label/ExampleRequired.js","docs/examples/PasswordInput/Example.js","docs/examples/ProgressBar/Example100Percent.js","docs/examples/ProgressBar/Example10Percent.js","docs/examples/ProgressBar/Example70Percent.js","docs/examples/TextInput/0.ExampleOptional.js","docs/examples/TextInput/1.ExampleError.js","docs/examples/TextInputBEM/ExampleError.js","docs/examples/TextInputCSSModules/ExampleError.js","docs/examples/TextInputStyledComponents/ExampleError.js","components/HelloWorld/HelloWorld.js","docs/examples/HelloWorld/ExampleHelloWorld.js","components/RegistrationForm/RegistrationForm.js","docs/examples/RegistrationForm/ExampleRegistrationForm.js","prism.js","docs/examples sync /^/.//.*$","docs/Navigation.js","docs/CodeExample.js","docs/Example.js","docs/Props.js","docs/ComponentPage.js","docs/Docs.js","serviceWorker.js","index.js"],"names":["getWidthAsPercentOfTotalWidth","percent","totalWidth","parseInt","ProgressBar","getColor","props","width","this","height","style","border","backgroundColor","React","Component","defaultProps","TextInput","htmlId","name","label","type","required","onChange","placeholder","value","error","children","marginBottom","Label","htmlFor","id","className","color","display","TextInputBEM","EyeIcon","xmlns","viewBox","transform","fill","d","cx","cy","r","PasswordInput","toggleShowPassword","event","setState","prevState","showPassword","preventDefault","state","maxLength","showVisibilityToggle","quality","onClick","marginLeft","length","module","exports","Example","ExampleOptional","ExampleAllFeatures","password","target","minLength","getQuality","Example100Percent","Example10Percent","Example70Percent","ExampleError","HelloWorld","message","ExampleHelloWorld","RegistrationForm","user","onSubmit","validate","submitted","email","errors","minPasswordLength","Object","getOwnPropertyNames","confirmationMessage","passwordQuality","ExampleRegistrationForm","console","log","_self","window","WorkerGlobalScope","self","Prism","e","t","n","manual","util","encode","a","content","alias","map","replace","prototype","toString","call","match","objId","__id","defineProperty","clone","hasOwnProperty","languages","extend","insertBefore","i","arguments","l","o","s","DFS","plugins","highlightAll","callback","selector","hooks","run","elements","document","querySelectorAll","highlightElement","test","parentNode","toLowerCase","nodeName","u","element","language","grammar","code","textContent","Worker","g","filename","onmessage","highlightedCode","data","innerHTML","postMessage","JSON","stringify","immediateClose","highlight","tokenize","matchGrammar","Token","c","h","f","inside","lookbehind","m","greedy","p","y","pattern","global","v","RegExp","source","b","k","w","lastIndex","P","_","exec","A","index","j","x","O","S","slice","N","C","E","push","L","Array","splice","apply","rest","all","add","join","tag","classes","attributes","parent","spellcheck","keys","addEventListener","parse","close","currentScript","getElementsByTagName","pop","src","hasAttribute","readyState","requestAnimationFrame","setTimeout","markup","comment","prolog","doctype","cdata","punctuation","namespace","entity","title","xml","html","mathml","svg","clike","string","keyword","number","operator","javascript","regex","interpolation","script","js","jsx","spread","webpackContext","req","webpackContextResolve","__webpack_require__","Error","resolve","Navigation","components","key","href","CodeExample","ref","toggleCode","showCode","example","description","ExampleComponent","require","componentName","default","Props","defaultValue","ComponentPage","component","examples","Docs","route","location","hash","substr","componentData","filter","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.81ce64a6.chunk.js","sourcesContent":["export function getWidthAsPercentOfTotalWidth(percent, totalWidth) {\n  return parseInt(totalWidth * (percent / 100), 10);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getWidthAsPercentOfTotalWidth } from \"../../utils/percentUtils\";\n\nclass ProgressBar extends React.Component {\n  getColor = percent => {\n    if (this.props.percent === 100) return \"green\";\n    return this.props.percent > 50 ? \"lightgreen\" : \"red\";\n  };\n\n  getWidthAsPercentOfTotalWidth = () => {\n    return parseInt(this.props.width * (this.props.percent / 100), 10);\n  };\n\n  render() {\n    const { percent, width, height } = this.props;\n    return (\n      <div style={{ border: \"solid 1px lightgray\", width: width }}>\n        <div\n          style={{\n            width: getWidthAsPercentOfTotalWidth(\n              this.props.width,\n              this.props.percent\n            ),\n            height,\n            backgroundColor: this.getColor(percent)\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nProgressBar.propTypes = {\n  /** Percent of progress completed */\n  percent: PropTypes.number.isRequired,\n\n  /** Bar width */\n  width: PropTypes.number.isRequired,\n\n  /** Bar height */\n  height: PropTypes.number\n};\n\nProgressBar.defaultProps = {\n  height: 5\n};\n\nexport default ProgressBar;\n","export { default } from \"./ProgressBar\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Label from \"../Label\";\n\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\nfunction TextInput({\n  htmlId,\n  name,\n  label,\n  type = \"text\",\n  required = false,\n  onChange,\n  placeholder,\n  value,\n  error,\n  children,\n  ...props\n}) {\n  return (\n    <div style={{ marginBottom: 16 }}>\n      <Label htmlFor={htmlId} label={label} required={required} />\n      <input\n        id={htmlId}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        style={error && { border: \"solid 1px red\" }}\n        {...props}\n      />\n      {children}\n      {error && (\n        <div className=\"error\" style={{ color: \"red\" }}>\n          {error}\n        </div>\n      )}\n    </div>\n  );\n}\n\nTextInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\n  name: PropTypes.string.isRequired,\n\n  /** Input label */\n  label: PropTypes.string.isRequired,\n\n  /** Input type */\n  type: PropTypes.oneOf([\"text\", \"number\", \"password\"]),\n\n  /** Mark label with asterisk if set to true */\n  required: PropTypes.bool,\n\n  /** Function to call onChange */\n  onChange: PropTypes.func.isRequired,\n\n  /** Placeholder to display when empty */\n  placeholder: PropTypes.string,\n\n  /** Value */\n  value: PropTypes.any,\n\n  /** String to display when error occurs */\n  error: PropTypes.string,\n\n  /** Child component to display next to the input */\n  children: PropTypes.node\n};\n\nexport default TextInput;\n","export { default } from \"./TextInput\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/** Label with required field display, htmlFor, and block styling */\nfunction Label({ htmlFor, label, required }) {\n  return (\n    <label style={{ display: \"block\" }} htmlFor={htmlFor}>\n      {label} {required && <span style={{ color: \"red\" }}> *</span>}\n    </label>\n  );\n}\n\nLabel.propTypes = {\n  /** HTML ID for associated input */\n  htmlFor: PropTypes.string.isRequired,\n\n  /** Label text */\n  label: PropTypes.string.isRequired,\n\n  /** Display asterisk after label if true */\n  required: PropTypes.bool\n};\n\nexport default Label;\n","export { default } from \"./Label\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Label from \"../Label\";\nimport \"./textInput.css\";\n\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\nfunction TextInputBEM({\n  htmlId,\n  name,\n  label,\n  type = \"text\",\n  required = false,\n  onChange,\n  placeholder,\n  value,\n  error,\n  children,\n  ...props\n}) {\n  return (\n    <div style={{ marginBottom: 16 }} className=\"textinput\">\n      <Label htmlFor={htmlId} label={label} required={required} />\n      <input\n        id={htmlId}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        className={error && \"textinput__input--state-error\"}\n        {...props}\n      />\n      {children}\n      {error && <div className=\"textinput__error\">{error}</div>}\n    </div>\n  );\n}\n\nTextInputBEM.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\n  name: PropTypes.string.isRequired,\n\n  /** Input label */\n  label: PropTypes.string.isRequired,\n\n  /** Input type */\n  type: PropTypes.oneOf([\"text\", \"number\", \"password\"]),\n\n  /** Mark label with asterisk if set to true */\n  required: PropTypes.bool,\n\n  /** Function to call onChange */\n  onChange: PropTypes.func.isRequired,\n\n  /** Placeholder to display when empty */\n  placeholder: PropTypes.string,\n\n  /** Value */\n  value: PropTypes.any,\n\n  /** String to display when error occurs */\n  error: PropTypes.string,\n\n  /** Child component to display next to the input */\n  children: PropTypes.node\n};\n\nexport default TextInputBEM;\n","export { default } from \"./TextInputBEM\";\n","import React from \"react\";\n\n/** SVG Eye Icon */\nfunction EyeIcon() {\n  // Attribution: Fabián Alexis at https://commons.wikimedia.org/wiki/File:Antu_view-preview.svg\n  return (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 22 22\"\n    >\n      <g transform=\"matrix(.02146 0 0 .02146 1 1)\" fill=\"#4d4d4d\">\n        <path d=\"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1\" />\n        <circle cx=\"466.08\" cy=\"466.02\" r=\"134.5\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default EyeIcon;\n","export { default } from \"./EyeIcon\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ProgressBar from \"../ProgressBar\";\nimport EyeIcon from \"../EyeIcon\";\nimport TextInput from \"../TextInput\";\n\n/** Password input with integrated label, quality tips, and show password toggle. */\nclass PasswordInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPassword: false\n    };\n  }\n\n  toggleShowPassword = event => {\n    this.setState(prevState => {\n      return { showPassword: !prevState.showPassword };\n    });\n    if (event) event.preventDefault();\n  };\n\n  render() {\n    const {\n      htmlId,\n      value,\n      label,\n      error,\n      onChange,\n      placeholder,\n      maxLength,\n      showVisibilityToggle,\n      quality,\n      ...props\n    } = this.props;\n    const { showPassword } = this.state;\n\n    return (\n      <TextInput\n        htmlId={htmlId}\n        label={label}\n        placeholder={placeholder}\n        type={showPassword ? \"text\" : \"password\"}\n        onChange={onChange}\n        value={value}\n        maxLength={maxLength}\n        error={error}\n        required\n        {...props}\n      >\n        {showVisibilityToggle && (\n          <button\n            onClick={this.toggleShowPassword}\n            style={{ marginLeft: 5 }}\n          >\n            <EyeIcon />\n          </button>\n        )}\n        {value.length > 0 && quality && (\n          <ProgressBar percent={quality} width={130} />\n        )}\n      </TextInput>\n    );\n  }\n}\n\nPasswordInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used by convention.*/\n  name: PropTypes.string.isRequired,\n\n  /** Password value */\n  value: PropTypes.any,\n\n  /** Input label */\n  label: PropTypes.string,\n\n  /** Function called when password input value changes */\n  onChange: PropTypes.func.isRequired,\n\n  /** Max password length accepted */\n  maxLength: PropTypes.number,\n\n  /** Placeholder displayed when no password is entered */\n  placeholder: PropTypes.string,\n\n  /** Set to true to show the toggle for displaying the currently entered password */\n  showVisibilityToggle: PropTypes.bool,\n\n  /** Display password quality visually via ProgressBar, accepts a number between 0 and 100 */\n  quality: PropTypes.number,\n\n  /** Validation error to display */\n  error: PropTypes.string\n};\n\nPasswordInput.defaultProps = {\n  maxLength: 50,\n  showVisibilityToggle: false,\n  label: \"Password\"\n};\n\nexport default PasswordInput;\n","export { default } from \"./PasswordInput\";\n","module.exports =\n/* eslint-disable */\n[{\n  \"name\": \"EyeIcon\",\n  \"description\": \"SVG Eye Icon\",\n  \"code\": \"import React from \\\"react\\\";\\n\\n/** SVG Eye Icon */\\nfunction EyeIcon() {\\n  // Attribution: Fabián Alexis at https://commons.wikimedia.org/wiki/File:Antu_view-preview.svg\\n  return (\\n    <svg\\n      width=\\\"16\\\"\\n      height=\\\"16\\\"\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      viewBox=\\\"0 0 22 22\\\"\\n    >\\n      <g transform=\\\"matrix(.02146 0 0 .02146 1 1)\\\" fill=\\\"#4d4d4d\\\">\\n        <path d=\\\"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1\\\" />\\n        <circle cx=\\\"466.08\\\" cy=\\\"466.02\\\" r=\\\"134.5\\\" />\\n      </g>\\n    </svg>\\n  );\\n}\\n\\nexport default EyeIcon;\\n\",\n  \"examples\": [{\n    \"name\": \"Example\",\n    \"description\": \"\",\n    \"code\": \"import React from \\\"react\\\";\\nimport EyeIcon from \\\"ps-react/EyeIcon\\\";\\n\\nexport default function Example() {\\n  return <EyeIcon />;\\n}\\n\"\n  }]\n}, {\n  \"name\": \"HelloWorld\",\n  \"description\": \"My super-lame component\",\n  \"props\": {\n    \"message\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Message to be displayed\",\n      \"defaultValue\": {\n        \"value\": \"'World'\",\n        \"computed\": false\n      }\n    }\n  },\n  \"code\": \"import React from \\\"react\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\n/** My super-lame component  */\\nconst HelloWorld = ({ message }) => <div>Hello World: {message}</div>;\\n\\nHelloWorld.propTypes = {\\n  /** Message to be displayed */\\n  message: PropTypes.string\\n};\\n\\nHelloWorld.defaultProps = {\\n  message: 'World'\\n}\\n\\nexport default HelloWorld;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleHelloWorld\",\n    \"description\": \"Custom message\",\n    \"code\": \"import React from \\\"react\\\";\\nimport HelloWorld from \\\"ps-react/HelloWorld\\\";\\n\\n/** Custom message */\\nexport default function ExampleHelloWorld() {\\n  return <HelloWorld message=\\\"Pluralsight viewers!\\\" />;\\n}\\n\"\n  }]\n}, {\n  \"name\": \"Label\",\n  \"description\": \"Label with required field display, htmlFor, and block styling\",\n  \"props\": {\n    \"htmlFor\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"HTML ID for associated input\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Label text\"\n    },\n    \"required\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Display asterisk after label if true\"\n    }\n  },\n  \"code\": \"import React from \\\"react\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\n/** Label with required field display, htmlFor, and block styling */\\nfunction Label({ htmlFor, label, required }) {\\n  return (\\n    <label style={{ display: \\\"block\\\" }} htmlFor={htmlFor}>\\n      {label} {required && <span style={{ color: \\\"red\\\" }}> *</span>}\\n    </label>\\n  );\\n}\\n\\nLabel.propTypes = {\\n  /** HTML ID for associated input */\\n  htmlFor: PropTypes.string.isRequired,\\n\\n  /** Label text */\\n  label: PropTypes.string.isRequired,\\n\\n  /** Display asterisk after label if true */\\n  required: PropTypes.bool\\n};\\n\\nexport default Label;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleOptional\",\n    \"description\": \"Option Label\",\n    \"code\": \"import React from \\\"react\\\";\\nimport Label from \\\"ps-react/Label\\\";\\n\\n/** Option Label */\\nexport default function ExampleOptional() {\\n  return <Label htmlFor=\\\"test\\\" label=\\\"test\\\" />;\\n}\\n\"\n  }, {\n    \"name\": \"ExampleRequired\",\n    \"description\": \"Required Label\",\n    \"code\": \"import React from \\\"react\\\";\\nimport Label from \\\"ps-react/Label\\\";\\n\\n/** Required Label */\\nexport default function ExampleOptional() {\\n  return <Label htmlFor=\\\"test\\\" label=\\\"test\\\" required={true} />;\\n}\\n\"\n  }]\n}, {\n  \"name\": \"PasswordInput\",\n  \"description\": \"Password input with integrated label, quality tips, and show password toggle.\",\n  \"props\": {\n    \"htmlId\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing.\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Input name. Recommend setting this to match object's property so a single change handler can be used by convention.\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"Password value\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Input label\",\n      \"defaultValue\": {\n        \"value\": \"\\\"Password\\\"\",\n        \"computed\": false\n      }\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"Function called when password input value changes\"\n    },\n    \"maxLength\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Max password length accepted\",\n      \"defaultValue\": {\n        \"value\": \"50\",\n        \"computed\": false\n      }\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Placeholder displayed when no password is entered\"\n    },\n    \"showVisibilityToggle\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Set to true to show the toggle for displaying the currently entered password\",\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      }\n    },\n    \"quality\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Display password quality visually via ProgressBar, accepts a number between 0 and 100\"\n    },\n    \"error\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Validation error to display\"\n    }\n  },\n  \"code\": \"import React from \\\"react\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport ProgressBar from \\\"../ProgressBar\\\";\\nimport EyeIcon from \\\"../EyeIcon\\\";\\nimport TextInput from \\\"../TextInput\\\";\\n\\n/** Password input with integrated label, quality tips, and show password toggle. */\\nclass PasswordInput extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      showPassword: false\\n    };\\n  }\\n\\n  toggleShowPassword = event => {\\n    this.setState(prevState => {\\n      return { showPassword: !prevState.showPassword };\\n    });\\n    if (event) event.preventDefault();\\n  };\\n\\n  render() {\\n    const {\\n      htmlId,\\n      value,\\n      label,\\n      error,\\n      onChange,\\n      placeholder,\\n      maxLength,\\n      showVisibilityToggle,\\n      quality,\\n      ...props\\n    } = this.props;\\n    const { showPassword } = this.state;\\n\\n    return (\\n      <TextInput\\n        htmlId={htmlId}\\n        label={label}\\n        placeholder={placeholder}\\n        type={showPassword ? \\\"text\\\" : \\\"password\\\"}\\n        onChange={onChange}\\n        value={value}\\n        maxLength={maxLength}\\n        error={error}\\n        required\\n        {...props}\\n      >\\n        {showVisibilityToggle && (\\n          <button\\n            onClick={this.toggleShowPassword}\\n            style={{ marginLeft: 5 }}\\n          >\\n            <EyeIcon />\\n          </button>\\n        )}\\n        {value.length > 0 && quality && (\\n          <ProgressBar percent={quality} width={130} />\\n        )}\\n      </TextInput>\\n    );\\n  }\\n}\\n\\nPasswordInput.propTypes = {\\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\\n  htmlId: PropTypes.string.isRequired,\\n\\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used by convention.*/\\n  name: PropTypes.string.isRequired,\\n\\n  /** Password value */\\n  value: PropTypes.any,\\n\\n  /** Input label */\\n  label: PropTypes.string,\\n\\n  /** Function called when password input value changes */\\n  onChange: PropTypes.func.isRequired,\\n\\n  /** Max password length accepted */\\n  maxLength: PropTypes.number,\\n\\n  /** Placeholder displayed when no password is entered */\\n  placeholder: PropTypes.string,\\n\\n  /** Set to true to show the toggle for displaying the currently entered password */\\n  showVisibilityToggle: PropTypes.bool,\\n\\n  /** Display password quality visually via ProgressBar, accepts a number between 0 and 100 */\\n  quality: PropTypes.number,\\n\\n  /** Validation error to display */\\n  error: PropTypes.string\\n};\\n\\nPasswordInput.defaultProps = {\\n  maxLength: 50,\\n  showVisibilityToggle: false,\\n  label: \\\"Password\\\"\\n};\\n\\nexport default PasswordInput;\\n\",\n  \"examples\": [{\n    \"name\": \"Example\",\n    \"description\": \"All features enabled\",\n    \"code\": \"import React from \\\"react\\\";\\nimport PasswordInput from \\\"ps-react/PasswordInput\\\";\\n\\n/** All features enabled */\\nclass ExampleAllFeatures extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      password: \\\"\\\"\\n    };\\n  }\\n\\n  getQuality() {\\n    const length = this.state.password.length;\\n    return length > 10 ? 100 : length * 10;\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <PasswordInput\\n          htmlId=\\\"password-input-example-all-features\\\"\\n          name=\\\"password\\\"\\n          onChange={event => this.setState({ password: event.target.value })}\\n          value={this.state.password}\\n          minLength={8}\\n          placeholder=\\\"Enter password\\\"\\n          showVisibilityToggle\\n          quality={this.getQuality()}\\n          {...this.props}\\n        />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default ExampleAllFeatures;\\n\"\n  }]\n}, {\n  \"name\": \"ProgressBar\",\n  \"description\": \"\",\n  \"props\": {\n    \"percent\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"Percent of progress completed\"\n    },\n    \"width\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"Bar width\"\n    },\n    \"height\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Bar height\",\n      \"defaultValue\": {\n        \"value\": \"5\",\n        \"computed\": false\n      }\n    }\n  },\n  \"code\": \"import React from \\\"react\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport { getWidthAsPercentOfTotalWidth } from \\\"../../utils/percentUtils\\\";\\n\\nclass ProgressBar extends React.Component {\\n  getColor = percent => {\\n    if (this.props.percent === 100) return \\\"green\\\";\\n    return this.props.percent > 50 ? \\\"lightgreen\\\" : \\\"red\\\";\\n  };\\n\\n  getWidthAsPercentOfTotalWidth = () => {\\n    return parseInt(this.props.width * (this.props.percent / 100), 10);\\n  };\\n\\n  render() {\\n    const { percent, width, height } = this.props;\\n    return (\\n      <div style={{ border: \\\"solid 1px lightgray\\\", width: width }}>\\n        <div\\n          style={{\\n            width: getWidthAsPercentOfTotalWidth(\\n              this.props.width,\\n              this.props.percent\\n            ),\\n            height,\\n            backgroundColor: this.getColor(percent)\\n          }}\\n        />\\n      </div>\\n    );\\n  }\\n}\\n\\nProgressBar.propTypes = {\\n  /** Percent of progress completed */\\n  percent: PropTypes.number.isRequired,\\n\\n  /** Bar width */\\n  width: PropTypes.number.isRequired,\\n\\n  /** Bar height */\\n  height: PropTypes.number\\n};\\n\\nProgressBar.defaultProps = {\\n  height: 5\\n};\\n\\nexport default ProgressBar;\\n\",\n  \"examples\": [{\n    \"name\": \"Example100Percent\",\n    \"description\": \"100% progress and height 20px\",\n    \"code\": \"import React from \\\"react\\\";\\nimport ProgressBar from \\\"ps-react/ProgressBar\\\";\\n\\n/** 100% progress and height 20px */\\nexport default function Example100Percent() {\\n  return <ProgressBar percent={100} width={150} height={20} />;\\n}\\n\"\n  }, {\n    \"name\": \"Example10Percent\",\n    \"description\": \"10% progress\",\n    \"code\": \"import React from \\\"react\\\";\\nimport ProgressBar from \\\"ps-react/ProgressBar\\\";\\n\\n/** 10% progress */\\n\\nexport default function Example10Percent() {\\n  return <ProgressBar percent={10} width={150} />;\\n}\\n\"\n  }, {\n    \"name\": \"Example70Percent\",\n    \"description\": \"70% progress\",\n    \"code\": \"import React from \\\"react\\\";\\nimport ProgressBar from \\\"ps-react/ProgressBar\\\";\\n\\n/** 70% progress */\\n\\nexport default function Example70Percent() {\\n  return <ProgressBar percent={70} width={150} />;\\n}\\n\"\n  }]\n}, {\n  \"name\": \"RegistrationForm\",\n  \"description\": \"Registration form with built-in validation.\",\n  \"props\": {\n    \"confirmationMessage\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Message displayed upon successful submission\",\n      \"defaultValue\": {\n        \"value\": \"\\\"Thanks for registering!\\\"\",\n        \"computed\": false\n      }\n    },\n    \"onSubmit\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"Called when form is submitted\"\n    },\n    \"minPasswordLength\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Minimum password length\",\n      \"defaultValue\": {\n        \"value\": \"8\",\n        \"computed\": false\n      }\n    }\n  },\n  \"code\": \"import React from \\\"react\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport TextInput from \\\"../TextInput\\\";\\nimport PasswordInput from \\\"../PasswordInput\\\";\\n\\n/** Registration form with built-in validation. */\\nclass RegistrationForm extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      user: {\\n        email: \\\"\\\",\\n        password: \\\"\\\"\\n      },\\n      errors: {},\\n      submitted: false\\n    };\\n  }\\n\\n  onChange = event => {\\n    const user = this.state.user;\\n    user[event.target.name] = event.target.value;\\n    this.setState({ user });\\n  };\\n\\n  // Returns a number from 0 to 100 that represents password quality.\\n  // For simplicity, just returning % of min length entered.\\n  // Could enhance with checks for number, special char, unique characters, etc.\\n  passwordQuality(password) {\\n    if (!password) return null;\\n    if (password.length >= this.props.minPasswordLength) return 100;\\n    const percentOfMinLength = parseInt(\\n      (password.length / this.props.minPasswordLength) * 100,\\n      10\\n    );\\n    return percentOfMinLength;\\n  }\\n\\n  validate({ email, password }) {\\n    const errors = {};\\n    const { minPasswordLength } = this.props;\\n\\n    if (!email) errors.email = \\\"Email required.\\\";\\n    if (password.length < minPasswordLength)\\n      errors.password = `Password must be at least ${minPasswordLength} characters.`;\\n\\n    this.setState({ errors });\\n    const formIsValid = Object.getOwnPropertyNames(errors).length === 0;\\n    return formIsValid;\\n  }\\n\\n  onSubmit = () => {\\n    const { user } = this.state;\\n    const formIsValid = this.validate(user);\\n    if (formIsValid) {\\n      this.props.onSubmit(user);\\n      this.setState({ submitted: true });\\n    }\\n  };\\n\\n  render() {\\n    const { errors, submitted } = this.state;\\n    const { email, password } = this.state.user;\\n\\n    return submitted ? (\\n      <h2>{this.props.confirmationMessage}</h2>\\n    ) : (\\n      <div>\\n        <TextInput\\n          htmlId=\\\"registration-form-email\\\"\\n          name=\\\"email\\\"\\n          onChange={this.onChange}\\n          label=\\\"Email\\\"\\n          value={email}\\n          error={errors.email}\\n          required\\n        />\\n\\n        <PasswordInput\\n          htmlId=\\\"registration-form-password\\\"\\n          name=\\\"password\\\"\\n          value={password}\\n          onChange={this.onChange}\\n          quality={this.passwordQuality(password)}\\n          showVisibilityToggle\\n          maxLength={50}\\n          error={errors.password}\\n        />\\n\\n        <input type=\\\"submit\\\" value=\\\"Register\\\" onClick={this.onSubmit} />\\n      </div>\\n    );\\n  }\\n}\\n\\nRegistrationForm.propTypes = {\\n  /** Message displayed upon successful submission */\\n  confirmationMessage: PropTypes.string,\\n\\n  /** Called when form is submitted */\\n  onSubmit: PropTypes.func.isRequired,\\n\\n  /** Minimum password length */\\n  minPasswordLength: PropTypes.number\\n};\\n\\nRegistrationForm.defaultProps = {\\n  confirmationMessage: \\\"Thanks for registering!\\\",\\n  minPasswordLength: 8\\n};\\n\\nexport default RegistrationForm;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleRegistrationForm\",\n    \"description\": \"\",\n    \"code\": \"import React from \\\"react\\\";\\nimport RegistrationForm from \\\"ps-react/RegistrationForm\\\";\\n\\nconst ExampleRegistrationForm = () => {\\n  const onSubmit = user => console.log(user);\\n  return <RegistrationForm onSubmit={onSubmit} />;\\n};\\n\\nexport default ExampleRegistrationForm;\\n\"\n  }]\n}, {\n  \"name\": \"TextInput\",\n  \"description\": \"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.\",\n  \"props\": {\n    \"htmlId\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing.\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Input name. Recommend setting this to match object's property so a single change handler can be used.\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Input label\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"text\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"number\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"password\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Input type\",\n      \"defaultValue\": {\n        \"value\": \"\\\"text\\\"\",\n        \"computed\": false\n      }\n    },\n    \"required\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Mark label with asterisk if set to true\",\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      }\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"Function to call onChange\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Placeholder to display when empty\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"Value\"\n    },\n    \"error\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"String to display when error occurs\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Child component to display next to the input\"\n    }\n  },\n  \"code\": \"import React from \\\"react\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport Label from \\\"../Label\\\";\\n\\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\\nfunction TextInput({\\n  htmlId,\\n  name,\\n  label,\\n  type = \\\"text\\\",\\n  required = false,\\n  onChange,\\n  placeholder,\\n  value,\\n  error,\\n  children,\\n  ...props\\n}) {\\n  return (\\n    <div style={{ marginBottom: 16 }}>\\n      <Label htmlFor={htmlId} label={label} required={required} />\\n      <input\\n        id={htmlId}\\n        type={type}\\n        name={name}\\n        placeholder={placeholder}\\n        value={value}\\n        onChange={onChange}\\n        style={error && { border: \\\"solid 1px red\\\" }}\\n        {...props}\\n      />\\n      {children}\\n      {error && (\\n        <div className=\\\"error\\\" style={{ color: \\\"red\\\" }}>\\n          {error}\\n        </div>\\n      )}\\n    </div>\\n  );\\n}\\n\\nTextInput.propTypes = {\\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\\n  htmlId: PropTypes.string.isRequired,\\n\\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\\n  name: PropTypes.string.isRequired,\\n\\n  /** Input label */\\n  label: PropTypes.string.isRequired,\\n\\n  /** Input type */\\n  type: PropTypes.oneOf([\\\"text\\\", \\\"number\\\", \\\"password\\\"]),\\n\\n  /** Mark label with asterisk if set to true */\\n  required: PropTypes.bool,\\n\\n  /** Function to call onChange */\\n  onChange: PropTypes.func.isRequired,\\n\\n  /** Placeholder to display when empty */\\n  placeholder: PropTypes.string,\\n\\n  /** Value */\\n  value: PropTypes.any,\\n\\n  /** String to display when error occurs */\\n  error: PropTypes.string,\\n\\n  /** Child component to display next to the input */\\n  children: PropTypes.node\\n};\\n\\nexport default TextInput;\\n\",\n  \"examples\": [{\n    \"name\": \"0.ExampleOptional\",\n    \"description\": \"\",\n    \"code\": \"import React from \\\"react\\\";\\nimport TextInput from \\\"ps-react/TextInput\\\";\\n\\nexport default function ExampleOptional() {\\n  return (\\n    <TextInput\\n      htmlId=\\\"example-optional\\\"\\n      label=\\\"First Name\\\"\\n      name=\\\"firstname\\\"\\n      onChange={() => {}}\\n    />\\n  );\\n}\\n\"\n  }, {\n    \"name\": \"1.ExampleError\",\n    \"description\": \"\",\n    \"code\": \"import React from \\\"react\\\";\\nimport TextInput from \\\"ps-react/TextInput\\\";\\n\\nexport default function ExampleOptional() {\\n  return (\\n    <TextInput\\n      htmlId=\\\"example-optional\\\"\\n      label=\\\"First Name\\\"\\n      name=\\\"firstname\\\"\\n      onChange={() => {}}\\n      required={true}\\n      error=\\\"First name is required\\\"\\n    />\\n  );\\n}\\n\"\n  }]\n}, {\n  \"name\": \"TextInputBEM\",\n  \"description\": \"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.\",\n  \"props\": {\n    \"htmlId\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing.\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Input name. Recommend setting this to match object's property so a single change handler can be used.\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Input label\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"text\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"number\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"password\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Input type\",\n      \"defaultValue\": {\n        \"value\": \"\\\"text\\\"\",\n        \"computed\": false\n      }\n    },\n    \"required\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Mark label with asterisk if set to true\",\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      }\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"Function to call onChange\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Placeholder to display when empty\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"Value\"\n    },\n    \"error\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"String to display when error occurs\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Child component to display next to the input\"\n    }\n  },\n  \"code\": \"import React from \\\"react\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport Label from \\\"../Label\\\";\\nimport \\\"./textInput.css\\\";\\n\\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\\nfunction TextInputBEM({\\n  htmlId,\\n  name,\\n  label,\\n  type = \\\"text\\\",\\n  required = false,\\n  onChange,\\n  placeholder,\\n  value,\\n  error,\\n  children,\\n  ...props\\n}) {\\n  return (\\n    <div style={{ marginBottom: 16 }} className=\\\"textinput\\\">\\n      <Label htmlFor={htmlId} label={label} required={required} />\\n      <input\\n        id={htmlId}\\n        type={type}\\n        name={name}\\n        placeholder={placeholder}\\n        value={value}\\n        onChange={onChange}\\n        className={error && \\\"textinput__input--state-error\\\"}\\n        {...props}\\n      />\\n      {children}\\n      {error && <div className=\\\"textinput__error\\\">{error}</div>}\\n    </div>\\n  );\\n}\\n\\nTextInputBEM.propTypes = {\\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\\n  htmlId: PropTypes.string.isRequired,\\n\\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\\n  name: PropTypes.string.isRequired,\\n\\n  /** Input label */\\n  label: PropTypes.string.isRequired,\\n\\n  /** Input type */\\n  type: PropTypes.oneOf([\\\"text\\\", \\\"number\\\", \\\"password\\\"]),\\n\\n  /** Mark label with asterisk if set to true */\\n  required: PropTypes.bool,\\n\\n  /** Function to call onChange */\\n  onChange: PropTypes.func.isRequired,\\n\\n  /** Placeholder to display when empty */\\n  placeholder: PropTypes.string,\\n\\n  /** Value */\\n  value: PropTypes.any,\\n\\n  /** String to display when error occurs */\\n  error: PropTypes.string,\\n\\n  /** Child component to display next to the input */\\n  children: PropTypes.node\\n};\\n\\nexport default TextInputBEM;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleError\",\n    \"description\": \"Required TextBox with error\",\n    \"code\": \"import React from \\\"react\\\";\\nimport TextInputBEM from \\\"ps-react/TextInputBEM\\\";\\n\\n/** Required TextBox with error */\\nexport default class ExampleError extends React.Component {\\n  render() {\\n    return (\\n      <TextInputBEM\\n        htmlId=\\\"example-optional\\\"\\n        label=\\\"First Name\\\"\\n        name=\\\"firstname\\\"\\n        onChange={() => {}}\\n        required\\n        error=\\\"First name is required.\\\"\\n      />\\n    );\\n  }\\n}\\n\"\n  }]\n}, {\n  \"name\": \"TextInputCSSModules\",\n  \"description\": \"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.\",\n  \"props\": {\n    \"htmlId\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing.\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Input name. Recommend setting this to match object's property so a single change handler can be used.\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Input label\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"text\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"number\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"password\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Input type\",\n      \"defaultValue\": {\n        \"value\": \"\\\"text\\\"\",\n        \"computed\": false\n      }\n    },\n    \"required\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Mark label with asterisk if set to true\",\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      }\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"Function to call onChange\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Placeholder to display when empty\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"Value\"\n    },\n    \"error\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"String to display when error occurs\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Child component to display next to the input\"\n    }\n  },\n  \"code\": \"import React from \\\"react\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport Label from \\\"../Label\\\";\\nimport styles from \\\"./textInput.css\\\";\\n\\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\\nfunction TextInput({\\n  htmlId,\\n  name,\\n  label,\\n  type = \\\"text\\\",\\n  required = false,\\n  onChange,\\n  placeholder,\\n  value,\\n  error,\\n  children,\\n  ...props\\n}) {\\n  return (\\n    <div className={styles.fieldset}>\\n      <Label htmlFor={htmlId} label={label} required={required} />\\n      <input\\n        id={htmlId}\\n        type={type}\\n        name={name}\\n        placeholder={placeholder}\\n        value={value}\\n        onChange={onChange}\\n        className={error && styles.inputError}\\n        {...props}\\n      />\\n      {children}\\n      {error && <div className={styles.error}>{error}</div>}\\n    </div>\\n  );\\n}\\n\\nTextInput.propTypes = {\\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\\n  htmlId: PropTypes.string.isRequired,\\n\\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\\n  name: PropTypes.string.isRequired,\\n\\n  /** Input label */\\n  label: PropTypes.string.isRequired,\\n\\n  /** Input type */\\n  type: PropTypes.oneOf([\\\"text\\\", \\\"number\\\", \\\"password\\\"]),\\n\\n  /** Mark label with asterisk if set to true */\\n  required: PropTypes.bool,\\n\\n  /** Function to call onChange */\\n  onChange: PropTypes.func.isRequired,\\n\\n  /** Placeholder to display when empty */\\n  placeholder: PropTypes.string,\\n\\n  /** Value */\\n  value: PropTypes.any,\\n\\n  /** String to display when error occurs */\\n  error: PropTypes.string,\\n\\n  /** Child component to display next to the input */\\n  children: PropTypes.node\\n};\\n\\nexport default TextInput;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleError\",\n    \"description\": \"Required TextBox with error\",\n    \"code\": \"import React from \\\"react\\\";\\nimport TextInputBEM from \\\"ps-react/TextInputBEM\\\";\\n\\n/** Required TextBox with error */\\nexport default class ExampleError extends React.Component {\\n  render() {\\n    return (\\n      <TextInputBEM\\n        htmlId=\\\"example-optional\\\"\\n        label=\\\"First Name\\\"\\n        name=\\\"firstname\\\"\\n        onChange={() => {}}\\n        required\\n        error=\\\"First name is required.\\\"\\n      />\\n    );\\n  }\\n}\\n\"\n  }]\n}, {\n  \"name\": \"TextInputStyledComponents\",\n  \"description\": \"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.\",\n  \"props\": {\n    \"htmlId\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing.\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Input name. Recommend setting this to match object's property so a single change handler can be used.\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Input label\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'text'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'number'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'password'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Input type\",\n      \"defaultValue\": {\n        \"value\": \"\\\"text\\\"\",\n        \"computed\": false\n      }\n    },\n    \"required\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Mark label with asterisk if set to true\",\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      }\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"Function to call onChange\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Placeholder to display when empty\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"Value\"\n    },\n    \"error\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"String to display when error occurs\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"Child component to display next to the input\"\n    }\n  },\n  \"code\": \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport Label from '../Label';\\nimport styled from 'styled-components';\\n\\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\\nfunction TextInput({htmlId, name, label, type = \\\"text\\\", required = false, onChange, placeholder, value, error, children, ...props}) {\\n  const Error = styled.div`\\n    color: red;\\n  `\\n\\n  const Input = styled.input`\\n    border: ${error && 'solid 1px red'};\\n    display: block;\\n  `;\\n\\n  const Fieldset = styled.div`\\n    margin-bottom: 16px;\\n  `;\\n\\n  return (\\n    <Fieldset>\\n      <Label htmlFor={htmlId} label={label} required={required} />\\n      <Input\\n        id={htmlId}\\n        type={type}\\n        name={name}\\n        placeholder={placeholder}\\n        value={value}\\n        onChange={onChange}\\n        {...props}/>\\n        {children}\\n      {error && <Error>{error}</Error>}\\n    </Fieldset>\\n  );\\n};\\n\\nTextInput.propTypes = {\\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\\n  htmlId: PropTypes.string.isRequired,\\n\\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\\n  name: PropTypes.string.isRequired,\\n\\n  /** Input label */\\n  label: PropTypes.string.isRequired,\\n\\n  /** Input type */\\n  type: PropTypes.oneOf(['text', 'number', 'password']),\\n\\n  /** Mark label with asterisk if set to true */\\n  required: PropTypes.bool,\\n\\n  /** Function to call onChange */\\n  onChange: PropTypes.func.isRequired,\\n\\n  /** Placeholder to display when empty */\\n  placeholder: PropTypes.string,\\n\\n  /** Value */\\n  value: PropTypes.any,\\n\\n  /** String to display when error occurs */\\n  error: PropTypes.string,\\n\\n  /** Child component to display next to the input */\\n  children: PropTypes.node\\n};\\n\\nexport default TextInput;\",\n  \"examples\": [{\n    \"name\": \"ExampleError\",\n    \"description\": \"Required TextBox with error\",\n    \"code\": \"import React from \\\"react\\\";\\nimport TextInputBEM from \\\"ps-react/TextInputBEM\\\";\\n\\n/** Required TextBox with error */\\nexport default class ExampleError extends React.Component {\\n  render() {\\n    return (\\n      <TextInputBEM\\n        htmlId=\\\"example-optional\\\"\\n        label=\\\"First Name\\\"\\n        name=\\\"firstname\\\"\\n        onChange={() => {}}\\n        required\\n        error=\\\"First name is required.\\\"\\n      />\\n    );\\n  }\\n}\\n\"\n  }]\n}];","import React from \"react\";\nimport EyeIcon from \"ps-react/EyeIcon\";\n\nexport default function Example() {\n  return <EyeIcon />;\n}\n","import React from \"react\";\nimport Label from \"ps-react/Label\";\n\n/** Option Label */\nexport default function ExampleOptional() {\n  return <Label htmlFor=\"test\" label=\"test\" />;\n}\n","import React from \"react\";\nimport Label from \"ps-react/Label\";\n\n/** Required Label */\nexport default function ExampleOptional() {\n  return <Label htmlFor=\"test\" label=\"test\" required={true} />;\n}\n","import React from \"react\";\nimport PasswordInput from \"ps-react/PasswordInput\";\n\n/** All features enabled */\nclass ExampleAllFeatures extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      password: \"\"\n    };\n  }\n\n  getQuality() {\n    const length = this.state.password.length;\n    return length > 10 ? 100 : length * 10;\n  }\n\n  render() {\n    return (\n      <div>\n        <PasswordInput\n          htmlId=\"password-input-example-all-features\"\n          name=\"password\"\n          onChange={event => this.setState({ password: event.target.value })}\n          value={this.state.password}\n          minLength={8}\n          placeholder=\"Enter password\"\n          showVisibilityToggle\n          quality={this.getQuality()}\n          {...this.props}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ExampleAllFeatures;\n","import React from \"react\";\nimport ProgressBar from \"ps-react/ProgressBar\";\n\n/** 100% progress and height 20px */\nexport default function Example100Percent() {\n  return <ProgressBar percent={100} width={150} height={20} />;\n}\n","import React from \"react\";\nimport ProgressBar from \"ps-react/ProgressBar\";\n\n/** 10% progress */\n\nexport default function Example10Percent() {\n  return <ProgressBar percent={10} width={150} />;\n}\n","import React from \"react\";\nimport ProgressBar from \"ps-react/ProgressBar\";\n\n/** 70% progress */\n\nexport default function Example70Percent() {\n  return <ProgressBar percent={70} width={150} />;\n}\n","import React from \"react\";\nimport TextInput from \"ps-react/TextInput\";\n\nexport default function ExampleOptional() {\n  return (\n    <TextInput\n      htmlId=\"example-optional\"\n      label=\"First Name\"\n      name=\"firstname\"\n      onChange={() => {}}\n    />\n  );\n}\n","import React from \"react\";\nimport TextInput from \"ps-react/TextInput\";\n\nexport default function ExampleOptional() {\n  return (\n    <TextInput\n      htmlId=\"example-optional\"\n      label=\"First Name\"\n      name=\"firstname\"\n      onChange={() => {}}\n      required={true}\n      error=\"First name is required\"\n    />\n  );\n}\n","import React from \"react\";\nimport TextInputBEM from \"ps-react/TextInputBEM\";\n\n/** Required TextBox with error */\nexport default class ExampleError extends React.Component {\n  render() {\n    return (\n      <TextInputBEM\n        htmlId=\"example-optional\"\n        label=\"First Name\"\n        name=\"firstname\"\n        onChange={() => {}}\n        required\n        error=\"First name is required.\"\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport TextInputBEM from \"ps-react/TextInputBEM\";\n\n/** Required TextBox with error */\nexport default class ExampleError extends React.Component {\n  render() {\n    return (\n      <TextInputBEM\n        htmlId=\"example-optional\"\n        label=\"First Name\"\n        name=\"firstname\"\n        onChange={() => {}}\n        required\n        error=\"First name is required.\"\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport TextInputBEM from \"ps-react/TextInputBEM\";\n\n/** Required TextBox with error */\nexport default class ExampleError extends React.Component {\n  render() {\n    return (\n      <TextInputBEM\n        htmlId=\"example-optional\"\n        label=\"First Name\"\n        name=\"firstname\"\n        onChange={() => {}}\n        required\n        error=\"First name is required.\"\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/** My super-lame component  */\nconst HelloWorld = ({ message }) => <div>Hello World: {message}</div>;\n\nHelloWorld.propTypes = {\n  /** Message to be displayed */\n  message: PropTypes.string\n};\n\nHelloWorld.defaultProps = {\n  message: 'World'\n}\n\nexport default HelloWorld;\n","import React from \"react\";\nimport HelloWorld from \"ps-react/HelloWorld\";\n\n/** Custom message */\nexport default function ExampleHelloWorld() {\n  return <HelloWorld message=\"Pluralsight viewers!\" />;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextInput from \"../TextInput\";\nimport PasswordInput from \"../PasswordInput\";\n\n/** Registration form with built-in validation. */\nclass RegistrationForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {\n        email: \"\",\n        password: \"\"\n      },\n      errors: {},\n      submitted: false\n    };\n  }\n\n  onChange = event => {\n    const user = this.state.user;\n    user[event.target.name] = event.target.value;\n    this.setState({ user });\n  };\n\n  // Returns a number from 0 to 100 that represents password quality.\n  // For simplicity, just returning % of min length entered.\n  // Could enhance with checks for number, special char, unique characters, etc.\n  passwordQuality(password) {\n    if (!password) return null;\n    if (password.length >= this.props.minPasswordLength) return 100;\n    const percentOfMinLength = parseInt(\n      (password.length / this.props.minPasswordLength) * 100,\n      10\n    );\n    return percentOfMinLength;\n  }\n\n  validate({ email, password }) {\n    const errors = {};\n    const { minPasswordLength } = this.props;\n\n    if (!email) errors.email = \"Email required.\";\n    if (password.length < minPasswordLength)\n      errors.password = `Password must be at least ${minPasswordLength} characters.`;\n\n    this.setState({ errors });\n    const formIsValid = Object.getOwnPropertyNames(errors).length === 0;\n    return formIsValid;\n  }\n\n  onSubmit = () => {\n    const { user } = this.state;\n    const formIsValid = this.validate(user);\n    if (formIsValid) {\n      this.props.onSubmit(user);\n      this.setState({ submitted: true });\n    }\n  };\n\n  render() {\n    const { errors, submitted } = this.state;\n    const { email, password } = this.state.user;\n\n    return submitted ? (\n      <h2>{this.props.confirmationMessage}</h2>\n    ) : (\n      <div>\n        <TextInput\n          htmlId=\"registration-form-email\"\n          name=\"email\"\n          onChange={this.onChange}\n          label=\"Email\"\n          value={email}\n          error={errors.email}\n          required\n        />\n\n        <PasswordInput\n          htmlId=\"registration-form-password\"\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          quality={this.passwordQuality(password)}\n          showVisibilityToggle\n          maxLength={50}\n          error={errors.password}\n        />\n\n        <input type=\"submit\" value=\"Register\" onClick={this.onSubmit} />\n      </div>\n    );\n  }\n}\n\nRegistrationForm.propTypes = {\n  /** Message displayed upon successful submission */\n  confirmationMessage: PropTypes.string,\n\n  /** Called when form is submitted */\n  onSubmit: PropTypes.func.isRequired,\n\n  /** Minimum password length */\n  minPasswordLength: PropTypes.number\n};\n\nRegistrationForm.defaultProps = {\n  confirmationMessage: \"Thanks for registering!\",\n  minPasswordLength: 8\n};\n\nexport default RegistrationForm;\n","import React from \"react\";\nimport RegistrationForm from \"ps-react/RegistrationForm\";\n\nconst ExampleRegistrationForm = () => {\n  const onSubmit = user => console.log(user);\n  return <RegistrationForm onSubmit={onSubmit} />;\n};\n\nexport default ExampleRegistrationForm;\n","/* eslint-disable */\n/* http://prismjs.com/download.html?themes=prism-okaidia&languages=markup+clike+javascript+jsx */\nvar _self=\"undefined\"!=typeof window?window:\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},Prism=function(){var e=/\\blang(?:uage)?-(\\w+)\\b/i,t=0,n=_self.Prism={manual:_self.Prism&&_self.Prism.manual,util:{encode:function(e){return e instanceof a?new a(e.type,n.util.encode(e.content),e.alias):\"Array\"===n.util.type(e)?e.map(n.util.encode):e.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/\\u00a0/g,\" \")},type:function(e){return Object.prototype.toString.call(e).match(/\\[object (\\w+)\\]/)[1]},objId:function(e){return e.__id||Object.defineProperty(e,\"__id\",{value:++t}),e.__id},clone:function(e){var t=n.util.type(e);switch(t){case\"Object\":var a={};for(var r in e)e.hasOwnProperty(r)&&(a[r]=n.util.clone(e[r]));return a;case\"Array\":return e.map&&e.map(function(e){return n.util.clone(e)})}return e}},languages:{extend:function(e,t){var a=n.util.clone(n.languages[e]);for(var r in t)a[r]=t[r];return a},insertBefore:function(e,t,a,r){r=r||n.languages;var i=r[e];if(2==arguments.length){a=arguments[1];for(var l in a)a.hasOwnProperty(l)&&(i[l]=a[l]);return i}var o={};for(var s in i)if(i.hasOwnProperty(s)){if(s==t)for(var l in a)a.hasOwnProperty(l)&&(o[l]=a[l]);o[s]=i[s]}return n.languages.DFS(n.languages,function(t,n){n===r[e]&&t!=e&&(this[t]=o)}),r[e]=o},DFS:function(e,t,a,r){r=r||{};for(var i in e)e.hasOwnProperty(i)&&(t.call(e,i,e[i],a||i),\"Object\"!==n.util.type(e[i])||r[n.util.objId(e[i])]?\"Array\"!==n.util.type(e[i])||r[n.util.objId(e[i])]||(r[n.util.objId(e[i])]=!0,n.languages.DFS(e[i],t,i,r)):(r[n.util.objId(e[i])]=!0,n.languages.DFS(e[i],t,null,r)))}},plugins:{},highlightAll:function(e,t){var a={callback:t,selector:'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'};n.hooks.run(\"before-highlightall\",a);for(var r,i=a.elements||document.querySelectorAll(a.selector),l=0;r=i[l++];)n.highlightElement(r,e===!0,a.callback)},highlightElement:function(t,a,r){for(var i,l,o=t;o&&!e.test(o.className);)o=o.parentNode;o&&(i=(o.className.match(e)||[,\"\"])[1].toLowerCase(),l=n.languages[i]),t.className=t.className.replace(e,\"\").replace(/\\s+/g,\" \")+\" language-\"+i,o=t.parentNode,/pre/i.test(o.nodeName)&&(o.className=o.className.replace(e,\"\").replace(/\\s+/g,\" \")+\" language-\"+i);var s=t.textContent,u={element:t,language:i,grammar:l,code:s};if(n.hooks.run(\"before-sanity-check\",u),!u.code||!u.grammar)return u.code&&(n.hooks.run(\"before-highlight\",u),u.element.textContent=u.code,n.hooks.run(\"after-highlight\",u)),n.hooks.run(\"complete\",u),void 0;if(n.hooks.run(\"before-highlight\",u),a&&_self.Worker){var g=new Worker(n.filename);g.onmessage=function(e){u.highlightedCode=e.data,n.hooks.run(\"before-insert\",u),u.element.innerHTML=u.highlightedCode,r&&r.call(u.element),n.hooks.run(\"after-highlight\",u),n.hooks.run(\"complete\",u)},g.postMessage(JSON.stringify({language:u.language,code:u.code,immediateClose:!0}))}else u.highlightedCode=n.highlight(u.code,u.grammar,u.language),n.hooks.run(\"before-insert\",u),u.element.innerHTML=u.highlightedCode,r&&r.call(t),n.hooks.run(\"after-highlight\",u),n.hooks.run(\"complete\",u)},highlight:function(e,t,r){var i=n.tokenize(e,t);return a.stringify(n.util.encode(i),r)},matchGrammar:function(e,t,a,r,i,l,o){var s=n.Token;for(var u in a)if(a.hasOwnProperty(u)&&a[u]){if(u==o)return;var g=a[u];g=\"Array\"===n.util.type(g)?g:[g];for(var c=0;c<g.length;++c){var h=g[c],f=h.inside,d=!!h.lookbehind,m=!!h.greedy,p=0,y=h.alias;if(m&&!h.pattern.global){var v=h.pattern.toString().match(/[imuy]*$/)[0];h.pattern=RegExp(h.pattern.source,v+\"g\")}h=h.pattern||h;for(var b=r,k=i;b<t.length;k+=t[b].length,++b){var w=t[b];if(t.length>e.length)return;if(!(w instanceof s)){h.lastIndex=0;var _=h.exec(w),P=1;if(!_&&m&&b!=t.length-1){if(h.lastIndex=k,_=h.exec(e),!_)break;for(var A=_.index+(d?_[1].length:0),j=_.index+_[0].length,x=b,O=k,S=t.length;S>x&&(j>O||!t[x].type&&!t[x-1].greedy);++x)O+=t[x].length,A>=O&&(++b,k=O);if(t[b]instanceof s||t[x-1].greedy)continue;P=x-b,w=e.slice(k,O),_.index-=k}if(_){d&&(p=_[1].length);var A=_.index+p,_=_[0].slice(p),j=A+_.length,N=w.slice(0,A),C=w.slice(j),E=[b,P];N&&(++b,k+=N.length,E.push(N));var L=new s(u,f?n.tokenize(_,f):_,y,_,m);if(E.push(L),C&&E.push(C),Array.prototype.splice.apply(t,E),1!=P&&n.matchGrammar(e,t,a,b,k,!0,u),l)break}else if(l)break}}}}},tokenize:function(e,t){var a=[e],r=t.rest;if(r){for(var i in r)t[i]=r[i];delete t.rest}return n.matchGrammar(e,a,t,0,0,!1),a},hooks:{all:{},add:function(e,t){var a=n.hooks.all;a[e]=a[e]||[],a[e].push(t)},run:function(e,t){var a=n.hooks.all[e];if(a&&a.length)for(var r,i=0;r=a[i++];)r(t)}}},a=n.Token=function(e,t,n,a,r){this.type=e,this.content=t,this.alias=n,this.length=0|(a||\"\").length,this.greedy=!!r};if(a.stringify=function(e,t,r){if(\"string\"==typeof e)return e;if(\"Array\"===n.util.type(e))return e.map(function(n){return a.stringify(n,t,e)}).join(\"\");var i={type:e.type,content:a.stringify(e.content,t,r),tag:\"span\",classes:[\"token\",e.type],attributes:{},language:t,parent:r};if(\"comment\"==i.type&&(i.attributes.spellcheck=\"true\"),e.alias){var l=\"Array\"===n.util.type(e.alias)?e.alias:[e.alias];Array.prototype.push.apply(i.classes,l)}n.hooks.run(\"wrap\",i);var o=Object.keys(i.attributes).map(function(e){return e+'=\"'+(i.attributes[e]||\"\").replace(/\"/g,\"&quot;\")+'\"'}).join(\" \");return\"<\"+i.tag+' class=\"'+i.classes.join(\" \")+'\"'+(o?\" \"+o:\"\")+\">\"+i.content+\"</\"+i.tag+\">\"},!_self.document)return _self.addEventListener?(_self.addEventListener(\"message\",function(e){var t=JSON.parse(e.data),a=t.language,r=t.code,i=t.immediateClose;_self.postMessage(n.highlight(r,n.languages[a],a)),i&&_self.close()},!1),_self.Prism):_self.Prism;var r=document.currentScript||[].slice.call(document.getElementsByTagName(\"script\")).pop();return r&&(n.filename=r.src,!document.addEventListener||n.manual||r.hasAttribute(\"data-manual\")||(\"loading\"!==document.readyState?window.requestAnimationFrame?window.requestAnimationFrame(n.highlightAll):window.setTimeout(n.highlightAll,16):document.addEventListener(\"DOMContentLoaded\",n.highlightAll))),_self.Prism}();\"undefined\"!=typeof module&&module.exports&&(module.exports=Prism),\"undefined\"!=typeof global&&(global.Prism=Prism);\nPrism.languages.markup={comment:/<!--[\\s\\S]*?-->/,prolog:/<\\?[\\s\\S]+?\\?>/,doctype:/<!DOCTYPE[\\s\\S]+?>/i,cdata:/<!\\[CDATA\\[[\\s\\S]*?]]>/i,tag:{pattern:/<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\s\\S])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,inside:{tag:{pattern:/^<\\/?[^\\s>\\/]+/i,inside:{punctuation:/^<\\/?/,namespace:/^[^\\s>\\/:]+:/}},\"attr-value\":{pattern:/=(?:('|\")[\\s\\S]*?(\\1)|[^\\s>]+)/i,inside:{punctuation:/[=>\"']/}},punctuation:/\\/?>/,\"attr-name\":{pattern:/[^\\s>\\/]+/,inside:{namespace:/^[^\\s>\\/:]+:/}}}},entity:/&#?[\\da-z]{1,8};/i},Prism.hooks.add(\"wrap\",function(a){\"entity\"===a.type&&(a.attributes.title=a.content.replace(/&amp;/,\"&\"))}),Prism.languages.xml=Prism.languages.markup,Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup;\nPrism.languages.clike={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,lookbehind:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0}],string:{pattern:/([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"class-name\":{pattern:/((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i,lookbehind:!0,inside:{punctuation:/(\\.|\\\\)/}},keyword:/\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\"boolean\":/\\b(true|false)\\b/,\"function\":/[a-z0-9_]+(?=\\()/i,number:/\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,operator:/--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,punctuation:/[{}[\\];(),.:]/};\nPrism.languages.javascript=Prism.languages.extend(\"clike\",{keyword:/\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,number:/\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\"function\":/[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\()/i,operator:/-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/}),Prism.languages.insertBefore(\"javascript\",\"keyword\",{regex:{pattern:/(^|[^\\/])\\/(?!\\/)(\\[.+?]|\\\\.|[^\\/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,lookbehind:!0,greedy:!0}}),Prism.languages.insertBefore(\"javascript\",\"string\",{\"template-string\":{pattern:/`(?:\\\\\\\\|\\\\?[^\\\\])*?`/,greedy:!0,inside:{interpolation:{pattern:/\\$\\{[^}]+\\}/,inside:{\"interpolation-punctuation\":{pattern:/^\\$\\{|\\}$/,alias:\"punctuation\"},rest:Prism.languages.javascript}},string:/[\\s\\S]+/}}}),Prism.languages.markup&&Prism.languages.insertBefore(\"markup\",\"tag\",{script:{pattern:/(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,lookbehind:!0,inside:Prism.languages.javascript,alias:\"language-javascript\"}}),Prism.languages.js=Prism.languages.javascript;\n!function(a){var e=a.util.clone(a.languages.javascript);a.languages.jsx=a.languages.extend(\"markup\",e),a.languages.jsx.tag.pattern=/<\\/?[\\w\\.:-]+\\s*(?:\\s+(?:[\\w\\.:-]+(?:=(?:(\"|')(\\\\?[\\s\\S])*?\\1|[^\\s'\">=]+|(\\{[\\s\\S]*?\\})))?|\\{\\.{3}\\w+\\})\\s*)*\\/?>/i,a.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:('|\")[\\s\\S]*?(\\1)|[^\\s>]+)/i,a.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:/\\{\\.{3}\\w+\\}/,inside:{punctuation:/\\{|\\}|\\./,\"attr-value\":/\\w+/}}},a.languages.jsx.tag);var s=a.util.clone(a.languages.jsx);delete s.punctuation,s=a.languages.insertBefore(\"jsx\",\"operator\",{punctuation:/=(?={)|[{}[\\];(),.:]/},{jsx:s}),a.languages.insertBefore(\"inside\",\"attr-value\",{script:{pattern:/=(\\{(?:\\{[^}]*\\}|[^}])+\\})/i,inside:s,alias:\"language-javascript\"}},a.languages.jsx.tag)}(Prism);","var map = {\n\t\"./EyeIcon/Example\": 15,\n\t\"./EyeIcon/Example.js\": 15,\n\t\"./HelloWorld/ExampleHelloWorld\": 27,\n\t\"./HelloWorld/ExampleHelloWorld.js\": 27,\n\t\"./Label/ExampleOptional\": 16,\n\t\"./Label/ExampleOptional.js\": 16,\n\t\"./Label/ExampleRequired\": 17,\n\t\"./Label/ExampleRequired.js\": 17,\n\t\"./PasswordInput/Example\": 18,\n\t\"./PasswordInput/Example.js\": 18,\n\t\"./ProgressBar/Example100Percent\": 19,\n\t\"./ProgressBar/Example100Percent.js\": 19,\n\t\"./ProgressBar/Example10Percent\": 20,\n\t\"./ProgressBar/Example10Percent.js\": 20,\n\t\"./ProgressBar/Example70Percent\": 21,\n\t\"./ProgressBar/Example70Percent.js\": 21,\n\t\"./RegistrationForm/ExampleRegistrationForm\": 28,\n\t\"./RegistrationForm/ExampleRegistrationForm.js\": 28,\n\t\"./TextInput/0.ExampleOptional\": 22,\n\t\"./TextInput/0.ExampleOptional.js\": 22,\n\t\"./TextInput/1.ExampleError\": 23,\n\t\"./TextInput/1.ExampleError.js\": 23,\n\t\"./TextInputBEM/ExampleError\": 24,\n\t\"./TextInputBEM/ExampleError.js\": 24,\n\t\"./TextInputCSSModules/ExampleError\": 25,\n\t\"./TextInputCSSModules/ExampleError.js\": 25,\n\t\"./TextInputStyledComponents/ExampleError\": 26,\n\t\"./TextInputStyledComponents/ExampleError.js\": 26\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 44;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Navigation = ({components}) => {\n  return (\n    <ul className=\"navigation\">\n      {\n        components.map( name => {\n          return (\n            <li key={name}>\n              <a href={`#${name}`}>{name}</a>\n            </li>\n          )\n        })\n      }\n    </ul>\n  )\n}\n\nNavigation.propTypes = {\n  components: PropTypes.array.isRequired\n};\n\nexport default Navigation;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"../prism\";\nimport { PrismCode } from \"react-prism\";\nimport \"prismjs/themes/prism-okaidia.css\";\n\nclass CodeExample extends React.Component {\n  render() {\n    return (\n      <pre\n        ref={ref => {\n          this.element = ref;\n        }}\n      >\n        <PrismCode className=\"language-jsx\">{this.props.children}</PrismCode>\n      </pre>\n    );\n  }\n}\n\nCodeExample.propTypes = {\n  children: PropTypes.string.isRequired\n};\n\nexport default CodeExample;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport CodeExample from \"./CodeExample\";\n\nclass Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n  }\n\n  toggleCode = event => {\n    event.preventDefault();\n    this.setState(prevState => {\n      return { showCode: !prevState.showCode };\n    });\n  };\n\n  render() {\n    const { showCode } = this.state;\n    const { code, description, name } = this.props.example;\n    // Must use CommonJS require to dynamically require because ES Modules must be statically analyzable.\n    const ExampleComponent = require(`./examples/${this.props.componentName}/${name}`)\n      .default;\n    return (\n      <div className=\"example\">\n        {description && <h4>{description}</h4>}\n\n        <ExampleComponent />\n\n        <p>\n          <button onClick={this.toggleCode}>\n            {showCode ? \"Hide\" : \"Show\"} Code\n          </button>\n        </p>\n\n        {showCode && <CodeExample>{code}</CodeExample>}\n      </div>\n    );\n  }\n}\n\nExample.propTypes = {\n  example: PropTypes.object.isRequired,\n  componentName: PropTypes.string.isRequired\n};\n\nexport default Example;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Props = ({ props }) => {\n  return (\n    <table className=\"props\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Description</th>\n          <th>Type</th>\n          <th>Default</th>\n          <th>Required</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Object.keys(props).map(key => {\n          return (\n            <tr key={key}>\n              <td>{key}</td>\n              <td>{props[key].description}</td>\n              <td>{props[key].type.name}</td>\n              <td>\n                {props[key].defaultValue && props[key].defaultValue.value}\n              </td>\n              <td>{props[key].required && \"X\"}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nProps.propTypes = {\n  props: PropTypes.object.isRequired\n};\n\nexport default Props;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Example from \"./Example\";\nimport Props from \"./Props\";\n\nconst ComponentPage = ({ component }) => {\n  const { name, description, props, examples } = component;\n\n  return (\n    <div className=\"componentpage\">\n      <h2>{name}</h2>\n      <p>{description}</p>\n\n      <h3>Example{examples.length > 1 && \"s\"}</h3>\n      {examples.length > 0\n        ? examples.map(example => (\n            <Example\n              key={example.code}\n              example={example}\n              componentName={name}\n            />\n          ))\n        : \"No examples exist.\"}\n\n      <h3>Props</h3>\n      {props ? <Props props={props} /> : \"This component accepts no props.\"}\n    </div>\n  );\n};\n\nComponentPage.propTypes = {\n  component: PropTypes.object.isRequired\n};\n\nexport default ComponentPage;\n","import React from \"react\";\nimport Navigation from \"./Navigation\";\nimport ComponentPage from \"./ComponentPage\";\nimport componentData from \"../../config/componentData\";\n\nexport default class Docs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: window.location.hash.substr(1)\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"hashchange\", () => {\n      this.setState({ route: window.location.hash.substr(1) });\n    });\n  }\n\n  render() {\n    const { route } = this.state;\n    const component = route\n      ? componentData.filter(component => component.name === route)[0]\n      : componentData[0];\n\n    return (\n      <div>\n        <Navigation\n          components={componentData.map(component => component.name)}\n        />\n        <ComponentPage component={component} />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Docs from './docs/Docs';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Docs />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}